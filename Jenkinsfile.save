pipeline {
    agent any

    environment {
        DOCKER_REPO = "docker.io/dharshini644/spring-boot-sample-gradle"
        IMAGE_TAG = "v${BUILD_NUMBER}"
        CLUSTER_NAME = "spring"                // your EKS cluster name
        AWS_REGION = "ap-southeast-2"
        NAMESPACE = "sample-app-namespace"
        DEPLOYMENT_NAME = "sample-springboot-app"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', 
                    url: 'https://github.com/Dharshini644/Day6.git',
                    credentialsId: 'github-creds'
            }
        }

            }

        stage('Deploy to EKS') {
            steps {
                withCredentials([[$class: 'AmazonWebServicesCredentialsBinding',
                                  credentialsId: 'aws-creds']]) {
                    sh """
                    # Update kubeconfig for EKS
                    aws eks update-kubeconfig --name ${CLUSTER_NAME} --region ${AWS_REGION}

                    # Update deployment image
                    kubectl set image deployment/${DEPLOYMENT_NAME} \
                        ${DEPLOYMENT_NAME}=${DOCKER_REPO}:${IMAGE_TAG} \
                        -n ${NAMESPACE} --record

                    # Wait for rollout to complete
                    kubectl rollout status deployment/${DEPLOYMENT_NAME} -n ${NAMESPACE} --timeout=180s
                    """
                }
            }
        }
    }

    post {
        success {
            echo "✅ Deployment succeeded: ${DOCKER_REPO}:${IMAGE_TAG}"
        }
        failure {
            echo "❌ Deployment failed — rolling back"
            sh "kubectl rollout undo deployment/${DEPLOYMENT_NAME} -n ${NAMESPACE}"
        }
    }
}
